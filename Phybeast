ARG IMAGE=nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04

# BEAGLE currently not working with CUDA 11.0
# JCU HPC Tesla: cuda:9.2-cudnn7-devel-ubuntu18.04 + openjdk-11-jdk  


FROM $IMAGE

ARG JAVA_PACKAGE="openjdk-8-jdk"
ENV PATH=/opt/conda/bin:$PATH
ENV BEAST_VERSION="2.6.2"
ENV BEAST_PACKAGE_PATH="/root/.beast/2.6"
ENV LD_LIBRARY_PATH /usr/local/lib:${LD_LIBRARY_PATH}
ENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
ARG MINICONDA_VERSION=latest

RUN apt-get update && apt-get install wget git curl build-essential autoconf automake libtool libgfortran3 git sed pkg-config wget ${JAVA_PACKAGE} -y

# --disable-sse --disable-march-native 
RUN git clone --depth=1 https://github.com/beagle-dev/beagle-lib.git \
    && cd beagle-lib \
    && ./autogen.sh \
    && ./configure --prefix=/usr/local \
    && make \
    && make install \
    && make check

RUN wget --quiet https://github.com/CompEvol/beast2/releases/download/v${BEAST_VERSION}/BEAST.v${BEAST_VERSION}.Linux.tgz \
    && tar -xzpf BEAST.v${BEAST_VERSION}.Linux.tgz \
    && rm BEAST.v${BEAST_VERSION}.Linux.tgz \
    && mv beast/bin/* /usr/local/bin \
    && mv beast/lib/* /usr/local/lib \
    && packagemanager -add BDSKY \
    && packagemanager -add phylodynamics \
    && packagemanager -add PhyDyn \
    && packagemanager -add CoupledMCMC \
    && packagemanager -add bdmm

RUN sed -i 's/x8g/x64g/' /usr/local/bin/treeannotator

RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN conda install -c conda-forge -c bioconda --yes --no-update-deps \
 raxml-ng=0.9.0 goalign fasttree treetime pysam python=3.7

RUN mkdir /nanopath && git clone https://github.com/np-core/nanopath /nanopath && pip install /nanopath



